{"version":3,"sources":["scripts/main.js"],"names":["gameField","document","querySelector","cells","querySelectorAll","scoreDisplay","startButton","loseMessage","winMessage","startMessage","tryAgain","board","score","isGameWon","isGameOver","displayBoard","row","col","value","cell","textContent","className","initGame","updateScore","classList","add","removeEventListener","handleKeyPress","addEventListener","forEach","generateTile","Math","floor","random","updateCell","hasEmptyCell","canMove","remove","arraysEqual","a","b","length","i","moveLeft","isChanged","newArr","count","push","moveRight","unshift","moveUp","rotate","moveDown","newBoard","event","key"],"mappings":"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","file":"main.d4a0f3fa.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst gameField = document.querySelector('.game-field');\nconst cells = document.querySelectorAll('.field-cell');\nconst scoreDisplay = document.querySelector('.game-score');\nconst startButton = document.querySelector('.button.start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst startMessage = document.querySelector('.message-start');\nconst tryAgain = document.querySelector('.btn');\n\nlet board = [];\nlet score = 0;\nlet isGameWon = false;\nlet isGameOver = false;\n\nfunction displayBoard() {\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      const value = board[row][col];\n      const cell = cells[row * 4 + col];\n\n      cell.textContent = value !== 0 ? value : '';\n      cell.className = `field-cell field-cell--${value}`;\n      scoreDisplay.textContent = score;\n    }\n  }\n}\n\nfunction initGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0]\n  ];\n  \n  score = 0;\n\n  updateScore();\n\n  if (!isGameOver && !isGameWon) {\n    startMessage.classList.add('hidden');\n\n    document.removeEventListener('keydown', handleKeyPress);\n    document.addEventListener('keydown', handleKeyPress);\n  }\n  \n  loseMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n  startButton.classList.add('restart');\n  startButton.textContent = 'Restart';\n  \n  cells.forEach(cell => {\n    cell.textContent = '';\n    cell.className = 'field-cell';\n  });\n  \n  generateTile();\n  generateTile();\n  displayBoard(); \n}\n\nfunction generateTile() {\n  const row = Math.floor(Math.random() * 4);\n  const col = Math.floor(Math.random() * 4);\n  \n  if (board[row][col] === 0) {\n    board[row][col] = Math.random() < 0.9 ? 2 : 4;\n\n    updateCell(row, col);\n    \n    if (!hasEmptyCell()) {\n      if (!canMove()) {\n        isGameOver = true;\n        loseMessage.classList.remove('hidden');\n      }\n    }\n  } else {\n    generateTile();\n  }\n}\n\nfunction updateCell(row, col) {\n  const cell = cells[row * 4 + col];\n  const value = board[row][col];\n\n  cell.textContent = value !== 0 ? value : '';\n  cell.className = `field-cell field-cell--${value}`;\n}\n\nfunction updateScore() {\n  scoreDisplay.textContent = score;\n}\n\nfunction hasEmptyCell() {\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      if (board[row][col] === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction canMove() {\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      if (board[row][col] === 0) {\n        return true;\n      }\n      if (col !== 3 && board[row][col] === board[row][col + 1]) {\n        return true;\n      }\n      if (row !== 3 && board[row][col] === board[row + 1][col]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n}\n\nfunction moveLeft() {\n  let isChanged = false;\n\n  for (let row = 0; row < 4; row++) {\n    let newArr = [];\n    let count = 1;\n\n    for (let col = 0; col < 4; col++) {\n      if (board[row][col] !== 0) {\n        if (board[row][col] === newArr[newArr.length - 1] && count > 0) {\n          newArr[newArr.length - 1] *= 2;\n          score += newArr[newArr.length - 1];\n          count--;\n          isChanged = true;\n        } else {\n          newArr.push(board[row][col]);\n          count = 1;\n        }\n      }\n    }\n\n    while (newArr.length < 4) {\n      newArr.push(0);\n    }\n\n    if (!arraysEqual(board[row], newArr)) {\n      isChanged = true;\n    }\n\n    board[row] = [...newArr];\n    newArr = [];\n  }\n\n  if (isChanged) {\n    generateTile();\n  }\n}\n\nfunction moveRight() {\n  let isChanged = false;\n\n  for (let row = 0; row < 4; row++) {\n    let newArr = [];\n    let count = 1;\n\n    for (let col = 3; col >= 0; col--) {\n      if (board[row][col] !== 0) {\n        if (board[row][col] === newArr[0] && count > 0) {\n          newArr[0] *= 2;\n          score += newArr[0];\n          count--;\n          isChanged = true;\n        } else {\n          newArr.unshift(board[row][col]);\n          count = 1;\n        }\n      }\n    }\n\n    while (newArr.length < 4) {\n      newArr.unshift(0);\n    }\n\n    if (!arraysEqual(board[row], newArr)) {\n      isChanged = true;\n    }\n\n    board[row] = newArr;\n    newArr = [];\n  }\n\n  if (isChanged) {\n    generateTile();\n  }\n}\n\nfunction moveUp() {\n  rotate();\n  moveRight();\n  rotate();\n  rotate();\n  rotate();\n}\n\nfunction moveDown() {\n  rotate();\n  moveLeft();\n  rotate();\n  rotate();\n  rotate();\n}\n\nfunction rotate() {\n  const newBoard = [];\n\n  for (let row = 0; row < 4; row++) {\n    let newArr = [];\n\n    for (let col = 3; col >= 0; col--) {\n      newArr.push(board[col][row]);\n    }\n\n    while (newArr.length < 4) {\n      newArr.unshift(0);\n    }\n\n    newBoard[row] = newArr;\n    newArr = [];\n  }\n\n  board = newBoard;\n}\n\nfunction handleKeyPress(event) {\n  if (event.key === 'ArrowLeft') {\n    moveLeft();\n    displayBoard();\n  } else if (event.key === 'ArrowRight') {\n    moveRight();\n    displayBoard();\n  } else if (event.key === 'ArrowUp') {\n    moveUp();\n    displayBoard();\n  } else if (event.key === 'ArrowDown') {\n    moveDown();\n    displayBoard();\n  }\n}\n\nstartButton.addEventListener('click', initGame);\ntryAgain.addEventListener('click', initGame);\n"]}